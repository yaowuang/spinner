import {
  __commonJS
} from "./chunk-76J2PTFD.js";

// node_modules/eases/back-in-out.js
var require_back_in_out = __commonJS({
  "node_modules/eases/back-in-out.js"(exports, module) {
    function backInOut(t) {
      var s = 1.70158 * 1.525;
      if ((t *= 2) < 1)
        return 0.5 * (t * t * ((s + 1) * t - s));
      return 0.5 * ((t -= 2) * t * ((s + 1) * t + s) + 2);
    }
    module.exports = backInOut;
  }
});

// node_modules/eases/back-in.js
var require_back_in = __commonJS({
  "node_modules/eases/back-in.js"(exports, module) {
    function backIn(t) {
      var s = 1.70158;
      return t * t * ((s + 1) * t - s);
    }
    module.exports = backIn;
  }
});

// node_modules/eases/back-out.js
var require_back_out = __commonJS({
  "node_modules/eases/back-out.js"(exports, module) {
    function backOut(t) {
      var s = 1.70158;
      return --t * t * ((s + 1) * t + s) + 1;
    }
    module.exports = backOut;
  }
});

// node_modules/eases/bounce-out.js
var require_bounce_out = __commonJS({
  "node_modules/eases/bounce-out.js"(exports, module) {
    function bounceOut(t) {
      var a = 4 / 11;
      var b = 8 / 11;
      var c = 9 / 10;
      var ca = 4356 / 361;
      var cb = 35442 / 1805;
      var cc = 16061 / 1805;
      var t2 = t * t;
      return t < a ? 7.5625 * t2 : t < b ? 9.075 * t2 - 9.9 * t + 3.4 : t < c ? ca * t2 - cb * t + cc : 10.8 * t * t - 20.52 * t + 10.72;
    }
    module.exports = bounceOut;
  }
});

// node_modules/eases/bounce-in-out.js
var require_bounce_in_out = __commonJS({
  "node_modules/eases/bounce-in-out.js"(exports, module) {
    var bounceOut = require_bounce_out();
    function bounceInOut(t) {
      return t < 0.5 ? 0.5 * (1 - bounceOut(1 - t * 2)) : 0.5 * bounceOut(t * 2 - 1) + 0.5;
    }
    module.exports = bounceInOut;
  }
});

// node_modules/eases/bounce-in.js
var require_bounce_in = __commonJS({
  "node_modules/eases/bounce-in.js"(exports, module) {
    var bounceOut = require_bounce_out();
    function bounceIn(t) {
      return 1 - bounceOut(1 - t);
    }
    module.exports = bounceIn;
  }
});

// node_modules/eases/circ-in-out.js
var require_circ_in_out = __commonJS({
  "node_modules/eases/circ-in-out.js"(exports, module) {
    function circInOut(t) {
      if ((t *= 2) < 1)
        return -0.5 * (Math.sqrt(1 - t * t) - 1);
      return 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);
    }
    module.exports = circInOut;
  }
});

// node_modules/eases/circ-in.js
var require_circ_in = __commonJS({
  "node_modules/eases/circ-in.js"(exports, module) {
    function circIn(t) {
      return 1 - Math.sqrt(1 - t * t);
    }
    module.exports = circIn;
  }
});

// node_modules/eases/circ-out.js
var require_circ_out = __commonJS({
  "node_modules/eases/circ-out.js"(exports, module) {
    function circOut(t) {
      return Math.sqrt(1 - --t * t);
    }
    module.exports = circOut;
  }
});

// node_modules/eases/cubic-in-out.js
var require_cubic_in_out = __commonJS({
  "node_modules/eases/cubic-in-out.js"(exports, module) {
    function cubicInOut(t) {
      return t < 0.5 ? 4 * t * t * t : 0.5 * Math.pow(2 * t - 2, 3) + 1;
    }
    module.exports = cubicInOut;
  }
});

// node_modules/eases/cubic-in.js
var require_cubic_in = __commonJS({
  "node_modules/eases/cubic-in.js"(exports, module) {
    function cubicIn(t) {
      return t * t * t;
    }
    module.exports = cubicIn;
  }
});

// node_modules/eases/cubic-out.js
var require_cubic_out = __commonJS({
  "node_modules/eases/cubic-out.js"(exports, module) {
    function cubicOut(t) {
      var f = t - 1;
      return f * f * f + 1;
    }
    module.exports = cubicOut;
  }
});

// node_modules/eases/elastic-in-out.js
var require_elastic_in_out = __commonJS({
  "node_modules/eases/elastic-in-out.js"(exports, module) {
    function elasticInOut(t) {
      return t < 0.5 ? 0.5 * Math.sin(13 * Math.PI / 2 * 2 * t) * Math.pow(2, 10 * (2 * t - 1)) : 0.5 * Math.sin(-13 * Math.PI / 2 * (2 * t - 1 + 1)) * Math.pow(2, -10 * (2 * t - 1)) + 1;
    }
    module.exports = elasticInOut;
  }
});

// node_modules/eases/elastic-in.js
var require_elastic_in = __commonJS({
  "node_modules/eases/elastic-in.js"(exports, module) {
    function elasticIn(t) {
      return Math.sin(13 * t * Math.PI / 2) * Math.pow(2, 10 * (t - 1));
    }
    module.exports = elasticIn;
  }
});

// node_modules/eases/elastic-out.js
var require_elastic_out = __commonJS({
  "node_modules/eases/elastic-out.js"(exports, module) {
    function elasticOut(t) {
      return Math.sin(-13 * (t + 1) * Math.PI / 2) * Math.pow(2, -10 * t) + 1;
    }
    module.exports = elasticOut;
  }
});

// node_modules/eases/expo-in-out.js
var require_expo_in_out = __commonJS({
  "node_modules/eases/expo-in-out.js"(exports, module) {
    function expoInOut(t) {
      return t === 0 || t === 1 ? t : t < 0.5 ? 0.5 * Math.pow(2, 20 * t - 10) : -0.5 * Math.pow(2, 10 - t * 20) + 1;
    }
    module.exports = expoInOut;
  }
});

// node_modules/eases/expo-in.js
var require_expo_in = __commonJS({
  "node_modules/eases/expo-in.js"(exports, module) {
    function expoIn(t) {
      return t === 0 ? t : Math.pow(2, 10 * (t - 1));
    }
    module.exports = expoIn;
  }
});

// node_modules/eases/expo-out.js
var require_expo_out = __commonJS({
  "node_modules/eases/expo-out.js"(exports, module) {
    function expoOut(t) {
      return t === 1 ? t : 1 - Math.pow(2, -10 * t);
    }
    module.exports = expoOut;
  }
});

// node_modules/eases/linear.js
var require_linear = __commonJS({
  "node_modules/eases/linear.js"(exports, module) {
    function linear(t) {
      return t;
    }
    module.exports = linear;
  }
});

// node_modules/eases/quad-in-out.js
var require_quad_in_out = __commonJS({
  "node_modules/eases/quad-in-out.js"(exports, module) {
    function quadInOut(t) {
      t /= 0.5;
      if (t < 1)
        return 0.5 * t * t;
      t--;
      return -0.5 * (t * (t - 2) - 1);
    }
    module.exports = quadInOut;
  }
});

// node_modules/eases/quad-in.js
var require_quad_in = __commonJS({
  "node_modules/eases/quad-in.js"(exports, module) {
    function quadIn(t) {
      return t * t;
    }
    module.exports = quadIn;
  }
});

// node_modules/eases/quad-out.js
var require_quad_out = __commonJS({
  "node_modules/eases/quad-out.js"(exports, module) {
    function quadOut(t) {
      return -t * (t - 2);
    }
    module.exports = quadOut;
  }
});

// node_modules/eases/quart-in-out.js
var require_quart_in_out = __commonJS({
  "node_modules/eases/quart-in-out.js"(exports, module) {
    function quarticInOut(t) {
      return t < 0.5 ? 8 * Math.pow(t, 4) : -8 * Math.pow(t - 1, 4) + 1;
    }
    module.exports = quarticInOut;
  }
});

// node_modules/eases/quart-in.js
var require_quart_in = __commonJS({
  "node_modules/eases/quart-in.js"(exports, module) {
    function quarticIn(t) {
      return Math.pow(t, 4);
    }
    module.exports = quarticIn;
  }
});

// node_modules/eases/quart-out.js
var require_quart_out = __commonJS({
  "node_modules/eases/quart-out.js"(exports, module) {
    function quarticOut(t) {
      return Math.pow(t - 1, 3) * (1 - t) + 1;
    }
    module.exports = quarticOut;
  }
});

// node_modules/eases/quint-in-out.js
var require_quint_in_out = __commonJS({
  "node_modules/eases/quint-in-out.js"(exports, module) {
    function qinticInOut(t) {
      if ((t *= 2) < 1)
        return 0.5 * t * t * t * t * t;
      return 0.5 * ((t -= 2) * t * t * t * t + 2);
    }
    module.exports = qinticInOut;
  }
});

// node_modules/eases/quint-in.js
var require_quint_in = __commonJS({
  "node_modules/eases/quint-in.js"(exports, module) {
    function qinticIn(t) {
      return t * t * t * t * t;
    }
    module.exports = qinticIn;
  }
});

// node_modules/eases/quint-out.js
var require_quint_out = __commonJS({
  "node_modules/eases/quint-out.js"(exports, module) {
    function qinticOut(t) {
      return --t * t * t * t * t + 1;
    }
    module.exports = qinticOut;
  }
});

// node_modules/eases/sine-in-out.js
var require_sine_in_out = __commonJS({
  "node_modules/eases/sine-in-out.js"(exports, module) {
    function sineInOut(t) {
      return -0.5 * (Math.cos(Math.PI * t) - 1);
    }
    module.exports = sineInOut;
  }
});

// node_modules/eases/sine-in.js
var require_sine_in = __commonJS({
  "node_modules/eases/sine-in.js"(exports, module) {
    function sineIn(t) {
      var v = Math.cos(t * Math.PI * 0.5);
      if (Math.abs(v) < 1e-14)
        return 1;
      else
        return 1 - v;
    }
    module.exports = sineIn;
  }
});

// node_modules/eases/sine-out.js
var require_sine_out = __commonJS({
  "node_modules/eases/sine-out.js"(exports, module) {
    function sineOut(t) {
      return Math.sin(t * Math.PI / 2);
    }
    module.exports = sineOut;
  }
});

// node_modules/eases/index.js
var require_eases = __commonJS({
  "node_modules/eases/index.js"(exports, module) {
    module.exports = {
      "backInOut": require_back_in_out(),
      "backIn": require_back_in(),
      "backOut": require_back_out(),
      "bounceInOut": require_bounce_in_out(),
      "bounceIn": require_bounce_in(),
      "bounceOut": require_bounce_out(),
      "circInOut": require_circ_in_out(),
      "circIn": require_circ_in(),
      "circOut": require_circ_out(),
      "cubicInOut": require_cubic_in_out(),
      "cubicIn": require_cubic_in(),
      "cubicOut": require_cubic_out(),
      "elasticInOut": require_elastic_in_out(),
      "elasticIn": require_elastic_in(),
      "elasticOut": require_elastic_out(),
      "expoInOut": require_expo_in_out(),
      "expoIn": require_expo_in(),
      "expoOut": require_expo_out(),
      "linear": require_linear(),
      "quadInOut": require_quad_in_out(),
      "quadIn": require_quad_in(),
      "quadOut": require_quad_out(),
      "quartInOut": require_quart_in_out(),
      "quartIn": require_quart_in(),
      "quartOut": require_quart_out(),
      "quintInOut": require_quint_in_out(),
      "quintIn": require_quint_in(),
      "quintOut": require_quint_out(),
      "sineInOut": require_sine_in_out(),
      "sineIn": require_sine_in(),
      "sineOut": require_sine_out()
    };
  }
});
export default require_eases();
//# sourceMappingURL=eases.js.map
